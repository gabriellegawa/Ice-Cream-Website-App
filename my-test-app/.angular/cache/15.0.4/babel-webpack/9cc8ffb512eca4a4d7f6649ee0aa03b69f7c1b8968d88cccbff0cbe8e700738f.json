{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { User } from '../../models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app-service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateUserFormComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Must be 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUserFormComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Must be 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUserFormComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUserFormComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Must be 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUserFormComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Must be 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUserFormComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Must be 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUserFormComponent_ng_template_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Must be 3 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUserFormComponent_ng_template_35_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"Password and Confirm Password does not match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUserFormComponent_ng_template_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, CreateUserFormComponent_ng_template_35_span_0_Template, 2, 0, \"span\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.createUserForm.value.veh_confirmPassword != ctx_r8.createUserForm.value.veh_password);\n  }\n}\nexport class CreateUserFormComponent {\n  constructor(service) {\n    this.service = service;\n    this.newUser = new User();\n    this.emitter = new EventEmitter();\n  }\n  ngOnInit() {\n    this.createUserForm = new FormGroup({\n      veh_firstName: new FormControl(this.newUser.firstName, [Validators.minLength(3), Validators.required]),\n      veh_lastName: new FormControl(this.newUser.lastName, [Validators.minLength(3), Validators.required]),\n      veh_emailAddress: new FormControl(this.newUser.emailAddress, [Validators.email, Validators.required]),\n      veh_phoneNumber: new FormControl(this.newUser.phoneNumber, [Validators.minLength(3), Validators.required]),\n      veh_dateOfBirth: new FormControl(this.newUser.dateOfBirth, [Validators.minLength(3), Validators.required]),\n      veh_password: new FormControl(this.newUser.password, [Validators.minLength(3), Validators.required]),\n      veh_confirmPassword: new FormControl(this.newUser.password, [Validators.minLength(3), Validators.required])\n    });\n  }\n  handleCreate() {\n    const input = this.createUserForm.value;\n    const user = new User({\n      _id: input.veh__id,\n      firstName: input.veh_firstName,\n      lastName: input.veh_lastName,\n      emailAddress: input.veh_emailAddress,\n      phoneNumber: input.veh_phoneNumber,\n      dateOfBirth: input.veh_dateOfBirth,\n      password: input.veh_password\n    });\n    this.service.registerUser(user).subscribe(data => console.log('Success!', data), error => console.error('error!', error));\n    console.log(user);\n    this.handleClear();\n    this.emitter.emit();\n  }\n  handleClear() {\n    this.createUserForm.controls.veh_firstName.reset();\n    this.createUserForm.controls.veh_lastName.reset();\n    this.createUserForm.controls.veh_emailAddress.reset();\n    this.createUserForm.controls.veh_phoneNumber.reset();\n    this.createUserForm.controls.veh_dateOfBirth.reset();\n    this.createUserForm.controls.veh_password.reset();\n    this.createUserForm.controls.veh_confirmPassword.reset();\n  }\n}\nCreateUserFormComponent.ɵfac = function CreateUserFormComponent_Factory(t) {\n  return new (t || CreateUserFormComponent)(i0.ɵɵdirectiveInject(i1.AppServiceService));\n};\nCreateUserFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateUserFormComponent,\n  selectors: [[\"app-create-user-form\"]],\n  inputs: {\n    newUser: \"newUser\"\n  },\n  outputs: {\n    emitter: \"on-submit\"\n  },\n  decls: 43,\n  vars: 10,\n  consts: [[3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"veh_firstName\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"veh_lastName\"], [\"type\", \"email\", \"formControlName\", \"veh_emailAddress\"], [\"type\", \"text\", \"formControlName\", \"veh_phoneNumber\"], [\"type\", \"date\", \"formControlName\", \"veh_dateOfBirth\"], [\"type\", \"password\", \"formControlName\", \"veh_password\"], [\"type\", \"password\", \"formControlName\", \"veh_confirmPassword\"], [3, \"ngIf\", \"ngIfElse\"], [\"checkPassword\", \"\"], [3, \"disabled\", \"click\"], [3, \"click\"], [1, \"error\"]],\n  template: function CreateUserFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵtext(1, \" First Name: \");\n      i0.ɵɵelement(2, \"br\")(3, \"input\", 1);\n      i0.ɵɵtemplate(4, CreateUserFormComponent_span_4_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelement(5, \"br\");\n      i0.ɵɵtext(6, \" Last Name: \");\n      i0.ɵɵelement(7, \"br\")(8, \"input\", 3);\n      i0.ɵɵtemplate(9, CreateUserFormComponent_span_9_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵtext(11, \" Email Address: \");\n      i0.ɵɵelement(12, \"br\")(13, \"input\", 4);\n      i0.ɵɵtemplate(14, CreateUserFormComponent_span_14_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵtext(16, \" Phone Number: \");\n      i0.ɵɵelement(17, \"br\")(18, \"input\", 5);\n      i0.ɵɵtemplate(19, CreateUserFormComponent_span_19_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelement(20, \"br\");\n      i0.ɵɵtext(21, \" Date of Birth: \");\n      i0.ɵɵelement(22, \"br\")(23, \"input\", 6);\n      i0.ɵɵtemplate(24, CreateUserFormComponent_span_24_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelement(25, \"br\");\n      i0.ɵɵtext(26, \" Create Password: \");\n      i0.ɵɵelement(27, \"br\")(28, \"input\", 7);\n      i0.ɵɵtemplate(29, CreateUserFormComponent_span_29_Template, 2, 0, \"span\", 2);\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵtext(31, \" Confirm Password: \");\n      i0.ɵɵelement(32, \"br\")(33, \"input\", 8);\n      i0.ɵɵtemplate(34, CreateUserFormComponent_ng_template_34_Template, 2, 0, \"ng-template\", 9);\n      i0.ɵɵtemplate(35, CreateUserFormComponent_ng_template_35_Template, 1, 1, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(37, \"br\")(38, \"br\");\n      i0.ɵɵelementStart(39, \"button\", 11);\n      i0.ɵɵlistener(\"click\", function CreateUserFormComponent_Template_button_click_39_listener() {\n        return ctx.handleCreate();\n      });\n      i0.ɵɵtext(40, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function CreateUserFormComponent_Template_button_click_41_listener() {\n        return ctx.handleClear();\n      });\n      i0.ɵɵtext(42, \"Clear\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r7 = i0.ɵɵreference(36);\n      i0.ɵɵproperty(\"formGroup\", ctx.createUserForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.createUserForm.controls.veh_firstName.invalid && ctx.createUserForm.controls.veh_firstName.dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.createUserForm.controls.veh_lastName.invalid && ctx.createUserForm.controls.veh_lastName.dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.createUserForm.controls.veh_emailAddress.invalid && ctx.createUserForm.controls.veh_emailAddress.dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.createUserForm.controls.veh_phoneNumber.invalid && ctx.createUserForm.controls.veh_phoneNumber.dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.createUserForm.controls.veh_dateOfBirth.invalid && ctx.createUserForm.controls.veh_dateOfBirth.dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.createUserForm.controls.veh_password.invalid && ctx.createUserForm.controls.veh_password.dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.createUserForm.controls.veh_confirmPassword.invalid && ctx.createUserForm.controls.veh_confirmPassword.dirty)(\"ngIfElse\", _r7);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", ctx.createUserForm.invalid);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAgB,eAAe;AAE9E,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,IAAI,QAAQ,mBAAmB;;;;;;;ICApCC,gCAC6C;IAAAA,oCAAoB;IAAAA,iBAAO;;;;;IAIxEA,gCAC4C;IAAAA,oCAAoB;IAAAA,iBAAO;;;;;IAIvEA,gCACgD;IAAAA,6CAA6B;IAAAA,iBAAO;;;;;IAGpFA,gCAC+C;IAAAA,oCAAoB;IAAAA,iBAAO;;;;;IAI1EA,gCAC+C;IAAAA,oCAAoB;IAAAA,iBAAO;;;;;IAI1EA,gCAC4C;IAAAA,oCAAoB;IAAAA,iBAAO;;;;;IAMnEA,gCAAqB;IAAAA,oCAAoB;IAAAA,iBAAO;;;;;IAGhDA,gCAA0G;IAAAA,4DAA4C;IAAAA,iBAAO;;;;;IAA7JA,yFAA6J;;;;IAAxIA,kHAAmF;;;AD3BhH,OAAM,MAAOC,uBAAuB;EAUlCC,YAAoBC,OAA2B;IAA3B,YAAO,GAAPA,OAAO;IAL3B,YAAO,GAAG,IAAIJ,IAAI,EAAE;IAGpB,YAAO,GAAG,IAAIJ,YAAY;EAEyB;EAEnDS,QAAQ;IACN,IAAI,CAACC,cAAc,GAAG,IAAIT,SAAS,CAAC;MAClCU,aAAa,EAAE,IAAIT,WAAW,CAC9B,IAAI,CAACU,OAAO,CAACC,SAAS,EAAE,CAACV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACvEC,YAAY,EAAE,IAAId,WAAW,CAC7B,IAAI,CAACU,OAAO,CAACK,QAAQ,EAAE,CAACd,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACtEG,gBAAgB,EAAE,IAAIhB,WAAW,CACjC,IAAI,CAACU,OAAO,CAACO,YAAY,EAAE,CAAChB,UAAU,CAACiB,KAAK,EAAEjB,UAAU,CAACY,QAAQ,CAAC,CAAC;MACnEM,eAAe,EAAE,IAAInB,WAAW,CAChC,IAAI,CAACU,OAAO,CAACU,WAAW,EAAE,CAACnB,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACzEQ,eAAe,EAAE,IAAIrB,WAAW,CAChC,IAAI,CAACU,OAAO,CAACY,WAAW,EAAE,CAACrB,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACzEU,YAAY,EAAE,IAAIvB,WAAW,CAC7B,IAAI,CAACU,OAAO,CAACc,QAAQ,EAAE,CAACvB,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACtEY,mBAAmB,EAAE,IAAIzB,WAAW,CACpC,IAAI,CAACU,OAAO,CAACc,QAAQ,EAAE,CAACvB,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,EAAEX,UAAU,CAACY,QAAQ,CAAC;KACpE,CAAC;EACN;EAEAa,YAAY;IACV,MAAMC,KAAK,GAAG,IAAI,CAACnB,cAAc,CAACoB,KAAK;IACvC,MAAMC,IAAI,GAAG,IAAI3B,IAAI,CAAC;MACpB4B,GAAG,EAAEH,KAAK,CAACI,OAAO;MAClBpB,SAAS,EAAEgB,KAAK,CAAClB,aAAa;MAC9BM,QAAQ,EAAEY,KAAK,CAACb,YAAY;MAC5BG,YAAY,EAAEU,KAAK,CAACX,gBAAgB;MACpCI,WAAW,EAAEO,KAAK,CAACR,eAAe;MAClCG,WAAW,EAAEK,KAAK,CAACN,eAAe;MAClCG,QAAQ,EAAEG,KAAK,CAACJ;KACjB,CAAC;IAEF,IAAI,CAACjB,OAAO,CAAC0B,YAAY,CAACH,IAAI,CAAC,CAACI,SAAS,CACvCC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC,EACrCG,KAAK,IAAIF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CACxC;IAEDF,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IAEjB,IAAI,CAACS,WAAW,EAAE;IAElB,IAAI,CAACC,OAAO,CAACC,IAAI,EAAE;EACrB;EAEAF,WAAW;IACT,IAAI,CAAC9B,cAAc,CAACiC,QAAQ,CAAChC,aAAa,CAACiC,KAAK,EAAE;IAClD,IAAI,CAAClC,cAAc,CAACiC,QAAQ,CAAC3B,YAAY,CAAC4B,KAAK,EAAE;IACjD,IAAI,CAAClC,cAAc,CAACiC,QAAQ,CAACzB,gBAAgB,CAAC0B,KAAK,EAAE;IACrD,IAAI,CAAClC,cAAc,CAACiC,QAAQ,CAACtB,eAAe,CAACuB,KAAK,EAAE;IACpD,IAAI,CAAClC,cAAc,CAACiC,QAAQ,CAACpB,eAAe,CAACqB,KAAK,EAAE;IACpD,IAAI,CAAClC,cAAc,CAACiC,QAAQ,CAAClB,YAAY,CAACmB,KAAK,EAAE;IACjD,IAAI,CAAClC,cAAc,CAACiC,QAAQ,CAAChB,mBAAmB,CAACiB,KAAK,EAAE;EAC1D;;;mBA/DWtC,uBAAuB;AAAA;;QAAvBA,uBAAuB;EAAAuC;EAAAC;IAAAlC;EAAA;EAAAmC;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCXpC9C,+BAAmC;MAE/BA,6BAAY;MAAAA,qBAAI;MAEhBA,0EACwE;MACxEA,qBAAI;MACJA,4BAAW;MAAAA,qBAAI;MAEfA,0EACuE;MACvEA,sBAAI;MACJA,iCAAe;MAAAA,sBAAI;MAEnBA,4EACoF;MAAAA,sBAAI;MACxFA,gCAAc;MAAAA,sBAAI;MAElBA,4EAC0E;MAC1EA,sBAAI;MACJA,iCAAe;MAAAA,sBAAI;MAEnBA,4EAC0E;MAC1EA,sBAAI;MACJA,mCAAiB;MAAAA,sBAAI;MAErBA,4EACuE;MACvEA,sBAAI;MACJA,oCAAkB;MAAAA,sBAAI;MAEtBA,0FAGc;MACdA,4HAEc;MACdA,sBAAK;MAELA,mCAAqE;MAA7DA;QAAA,OAAS+C,kBAAc;MAAA,EAAC;MAAqC/C,uBAAM;MAAAA,iBAAS;MACpFA,mCAAgC;MAAxBA;QAAA,OAAS+C,iBAAa;MAAA,EAAC;MAAC/C,sBAAK;MAAAA,iBAAS;;;;MA3C5CA,8CAA4B;MAITA,eACqB;MADrBA,2HACqB;MAIrBA,eACoB;MADpBA,yHACoB;MAIpBA,eACwB;MADxBA,iIACwB;MAGxBA,eACuB;MADvBA,+HACuB;MAIvBA,eACuB;MADvBA,+HACuB;MAIvBA,eACoB;MADpBA,yHACoB;MAI5BA,eACqC;MADrCA,uIACqC;MAQjBA,eAAmC;MAAnCA,qDAAmC","names":["EventEmitter","FormGroup","FormControl","Validators","User","i0","CreateUserFormComponent","constructor","service","ngOnInit","createUserForm","veh_firstName","newUser","firstName","minLength","required","veh_lastName","lastName","veh_emailAddress","emailAddress","email","veh_phoneNumber","phoneNumber","veh_dateOfBirth","dateOfBirth","veh_password","password","veh_confirmPassword","handleCreate","input","value","user","_id","veh__id","registerUser","subscribe","data","console","log","error","handleClear","emitter","emit","controls","reset","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\users\\create-user-form\\create-user-form.component.ts","C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\users\\create-user-form\\create-user-form.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\n\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AppServiceService } from '../../app-service.service';\r\nimport { User } from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'app-create-user-form',\r\n  templateUrl: './create-user-form.component.html',\r\n  styleUrls: ['./create-user-form.component.scss']\r\n})\r\nexport class CreateUserFormComponent implements OnInit {\r\n\r\n  createUserForm !:FormGroup\r\n\r\n  @Input()\r\n  newUser = new User()\r\n\r\n  @Output(\"on-submit\")\r\n  emitter = new EventEmitter\r\n\r\n  constructor(private service : AppServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createUserForm = new FormGroup({\r\n      veh_firstName: new FormControl(\r\n      this.newUser.firstName, [Validators.minLength(3), Validators.required]),\r\n      veh_lastName: new FormControl(\r\n      this.newUser.lastName, [Validators.minLength(3), Validators.required]),\r\n      veh_emailAddress: new FormControl(\r\n      this.newUser.emailAddress, [Validators.email, Validators.required]),\r\n      veh_phoneNumber: new FormControl(\r\n      this.newUser.phoneNumber, [Validators.minLength(3), Validators.required]),\r\n      veh_dateOfBirth: new FormControl(\r\n      this.newUser.dateOfBirth, [Validators.minLength(3), Validators.required]),\r\n      veh_password: new FormControl(\r\n      this.newUser.password, [Validators.minLength(3), Validators.required]),\r\n      veh_confirmPassword: new FormControl(\r\n      this.newUser.password, [Validators.minLength(3), Validators.required]),\r\n      })\r\n  }\r\n\r\n  handleCreate(){\r\n    const input = this.createUserForm.value\r\n    const user = new User({ \r\n      _id: input.veh__id,\r\n      firstName: input.veh_firstName,\r\n      lastName: input.veh_lastName,\r\n      emailAddress: input.veh_emailAddress,\r\n      phoneNumber: input.veh_phoneNumber,\r\n      dateOfBirth: input.veh_dateOfBirth,\r\n      password: input.veh_password\r\n    })\r\n\r\n    this.service.registerUser(user).subscribe(\r\n      data => console.log('Success!', data),\r\n      error => console.error('error!', error)\r\n    )\r\n    \r\n    console.log(user)\r\n    \r\n    this.handleClear()\r\n\r\n    this.emitter.emit()\r\n  }\r\n\r\n  handleClear(){\r\n    this.createUserForm.controls.veh_firstName.reset();\r\n    this.createUserForm.controls.veh_lastName.reset();\r\n    this.createUserForm.controls.veh_emailAddress.reset();\r\n    this.createUserForm.controls.veh_phoneNumber.reset();\r\n    this.createUserForm.controls.veh_dateOfBirth.reset();\r\n    this.createUserForm.controls.veh_password.reset();\r\n    this.createUserForm.controls.veh_confirmPassword.reset();\r\n  }\r\n}\r\n","<form [formGroup]=\"createUserForm\">\r\n    <!-- TODO: Improve error handling -->\r\n    First Name: <br>\r\n    <input type=\"text\" formControlName=\"veh_firstName\" />\r\n    <span class=\"error\" *ngIf=\"createUserForm.controls.veh_firstName.invalid &&\r\n    createUserForm.controls.veh_firstName.dirty\">Must be 3 characters</span>\r\n    <br>\r\n    Last Name: <br>\r\n    <input type=\"text\" formControlName=\"veh_lastName\" />\r\n    <span class=\"error\" *ngIf=\"createUserForm.controls.veh_lastName.invalid &&\r\n    createUserForm.controls.veh_lastName.dirty\">Must be 3 characters</span>\r\n    <br>\r\n    Email Address: <br>\r\n    <input type=\"email\" formControlName=\"veh_emailAddress\" />\r\n    <span class=\"error\" *ngIf=\"createUserForm.controls.veh_emailAddress.invalid &&\r\n    createUserForm.controls.veh_emailAddress.dirty\">Must be a valid email address</span><br>\r\n    Phone Number: <br>\r\n    <input type=\"text\" formControlName=\"veh_phoneNumber\"/>\r\n    <span class=\"error\" *ngIf=\"createUserForm.controls.veh_phoneNumber.invalid &&\r\n    createUserForm.controls.veh_phoneNumber.dirty\">Must be 3 characters</span>\r\n    <br>\r\n    Date of Birth: <br>\r\n    <input type=\"date\" formControlName=\"veh_dateOfBirth\"/>\r\n    <span class=\"error\" *ngIf=\"createUserForm.controls.veh_dateOfBirth.invalid &&\r\n    createUserForm.controls.veh_dateOfBirth.dirty\">Must be 3 characters</span>\r\n    <br>\r\n    Create Password: <br>\r\n    <input type=\"password\" formControlName=\"veh_password\"/>\r\n    <span class=\"error\" *ngIf=\"createUserForm.controls.veh_password.invalid &&\r\n    createUserForm.controls.veh_password.dirty\">Must be 3 characters</span>\r\n    <br>\r\n    Confirm Password: <br>\r\n    <input type=\"password\" formControlName=\"veh_confirmPassword\"/>\r\n    <ng-template [ngIf]=\"createUserForm.controls.veh_confirmPassword.invalid &&\r\n    createUserForm.controls.veh_confirmPassword.dirty\" [ngIfElse]=\"checkPassword\">\r\n        <span class=\"error\" >Must be 3 characters</span>\r\n    </ng-template>\r\n    <ng-template #checkPassword>\r\n        <span class=\"error\" *ngIf=\"createUserForm.value.veh_confirmPassword != createUserForm.value.veh_password\">Password and Confirm Password does not match</span>\r\n    </ng-template>\r\n    <br/>\r\n    <br/>\r\n    <button (click)=\"handleCreate()\" [disabled]=\"createUserForm.invalid\">Submit</button>\r\n    <button (click)=\"handleClear()\">Clear</button>\r\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}