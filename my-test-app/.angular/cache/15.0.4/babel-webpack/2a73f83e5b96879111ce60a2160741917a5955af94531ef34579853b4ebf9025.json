{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ModalService {\n  constructor() {\n    this.modals = [];\n  }\n  add(modal) {\n    // add modal to array of active modals\n    this.modals.push(modal);\n  }\n  remove(id) {\n    // remove modal from array of active modals\n    this.modals = this.modals.filter(x => x.id != id);\n  }\n  open(id) {\n    // open modal specified by id\n    const modal = this.modals.find(x => x.id == id);\n    modal.open();\n  }\n  close(id) {\n    // close modal specified by id\n    const modal = this.modals.find(x => x.id == id);\n    modal.close();\n  }\n}\nModalService.ɵfac = function ModalService_Factory(t) {\n  return new (t || ModalService)();\n};\nModalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModalService,\n  factory: ModalService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAGA,OAAM,MAAOA,YAAY;EADzBC;IAEY,WAAM,GAAU,EAAE;;EAE1BC,GAAG,CAACC,KAAU;IACV;IACA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC;EAC3B;EAEAG,MAAM,CAACC,EAAU;IACb;IACA,IAAI,CAACH,MAAM,GAAG,IAAI,CAACA,MAAM,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACF,EAAE,IAAIA,EAAE,CAAC;EACrD;EAEAG,IAAI,CAACH,EAAU;IACX;IACA,MAAMJ,KAAK,GAAG,IAAI,CAACC,MAAM,CAACO,IAAI,CAACF,CAAC,IAAIA,CAAC,CAACF,EAAE,IAAIA,EAAE,CAAC;IAC/CJ,KAAK,CAACO,IAAI,EAAE;EAChB;EAEAE,KAAK,CAACL,EAAU;IACZ;IACA,MAAMJ,KAAK,GAAG,IAAI,CAACC,MAAM,CAACO,IAAI,CAACF,CAAC,IAAIA,CAAC,CAACF,EAAE,IAAIA,EAAE,CAAC;IAC/CJ,KAAK,CAACS,KAAK,EAAE;EACjB;;;mBAvBSZ,YAAY;AAAA;;SAAZA,YAAY;EAAAa,SAAZb,YAAY;EAAAc,YADC;AAAM","names":["ModalService","constructor","add","modal","modals","push","remove","id","filter","x","open","find","close","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\_modal\\modal.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ModalService {\r\n    private modals: any[] = [];\r\n\r\n    add(modal: any) {\r\n        // add modal to array of active modals\r\n        this.modals.push(modal);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.modals = this.modals.filter(x => x.id != id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        const modal = this.modals.find(x => x.id == id);\r\n        modal.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const modal = this.modals.find(x => x.id == id);\r\n        modal.close();\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}