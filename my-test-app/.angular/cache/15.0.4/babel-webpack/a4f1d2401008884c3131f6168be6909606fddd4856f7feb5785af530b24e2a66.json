{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app-service.service\";\nimport * as i2 from \"../../_modal\";\nimport * as i3 from \"../../_services/storage.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../_modal/modal.component\";\nimport * as i7 from \"../update-service-form/update-service-form.component\";\nfunction ServiceGalleryComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ServiceGalleryComponent_div_2_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const service_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      ctx_r3.editService(service_r1);\n      return i0.ɵɵresetView(ctx_r3.modalService.open(ctx_r3.String(i_r2)));\n    });\n    i0.ɵɵtext(14, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ServiceGalleryComponent_div_2_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const service_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteService(service_r1));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"hr\");\n    i0.ɵɵelementStart(18, \"jw-modal\", 2)(19, \"app-update-service-form\", 3);\n    i0.ɵɵlistener(\"on-submit\", function ServiceGalleryComponent_div_2_Template_app_update_service_form_on_submit_19_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      ctx_r6.commitEdit($event);\n      return i0.ɵɵresetView(ctx_r6.modalService.close(ctx_r6.String(i_r2)));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function ServiceGalleryComponent_div_2_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      ctx_r7.onCancel();\n      return i0.ɵɵresetView(ctx_r7.modalService.close(ctx_r7.String(i_r2)));\n    });\n    i0.ɵɵtext(21, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const service_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Number: \", i_r2 + 1, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Title \", service_r1.title, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Description \", service_r1.description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Date Added \", service_r1.dateAdded, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Last Modified \", service_r1.lastModified, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Creator \", service_r1.user, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate(\"id\", i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"service\", service_r1);\n  }\n}\nexport class ServiceGalleryComponent {\n  constructor(newService, modalService, storageService, router) {\n    this.newService = newService;\n    this.modalService = modalService;\n    this.storageService = storageService;\n    this.router = router;\n    this.serviceList = [];\n    this.emitter = new EventEmitter();\n  }\n  ngOnInit() {\n    if (!this.storageService.isLoggedIn()) {\n      this.router.navigate([\"user-login-form\"]);\n    } else {\n      this.getServiceList();\n    }\n  }\n  refresh() {\n    window.location.reload();\n  }\n  getServiceList() {\n    this.newService.getServiceList().subscribe(Response => {\n      this.serviceList = Response;\n      console.log('Response from API', Response);\n    }, error => {\n      console.error('error', Response);\n    });\n  }\n  editService(u) {\n    this.serviceToEdit = u;\n  }\n  commitEdit(u) {\n    this.ngOnInit();\n    this.serviceToEdit = undefined;\n  }\n  deleteService(u) {\n    this.newService.deleteService(u).subscribe(data => console.log('Success!', data), error => console.error('error!', error));\n    this.refresh();\n    this.emitter.emit();\n  }\n  onCancel() {\n    this.serviceToEdit = undefined;\n  }\n  String(number) {\n    return String(number);\n  }\n}\nServiceGalleryComponent.ɵfac = function ServiceGalleryComponent_Factory(t) {\n  return new (t || ServiceGalleryComponent)(i0.ɵɵdirectiveInject(i1.AppServiceService), i0.ɵɵdirectiveInject(i2.ModalService), i0.ɵɵdirectiveInject(i3.StorageService), i0.ɵɵdirectiveInject(i4.Router));\n};\nServiceGalleryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServiceGalleryComponent,\n  selectors: [[\"app-service-gallery\"]],\n  outputs: {\n    emitter: \"on-submit\"\n  },\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"id\"], [3, \"service\", \"on-submit\"]],\n  template: function ServiceGalleryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Welcome to service gallery\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ServiceGalleryComponent_div_2_Template, 22, 8, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.serviceList);\n    }\n  },\n  dependencies: [i5.NgForOf, i6.ModalComponent, i7.UpdateServiceFormComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","ctx_r3","ctx_r6","ctx_r7","ServiceGalleryComponent","constructor","newService","modalService","storageService","router","ngOnInit","isLoggedIn","navigate","getServiceList","refresh","window","location","reload","subscribe","Response","serviceList","console","log","error","editService","u","serviceToEdit","commitEdit","undefined","deleteService","data","emitter","emit","onCancel","String","number","selectors","outputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\services\\service-gallery\\service-gallery.component.ts","C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\services\\service-gallery\\service-gallery.component.html"],"sourcesContent":["import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AppServiceService } from '../../app-service.service';\r\nimport { Service } from '../../models/service'\r\nimport { ModalService } from '../../_modal';\r\nimport { StorageService } from '../../_services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-service-gallery',\r\n  templateUrl: './service-gallery.component.html',\r\n  styleUrls: ['./service-gallery.component.scss']\r\n})\r\nexport class ServiceGalleryComponent implements OnInit {\r\n\r\n  serviceList:Service[] = []\r\n  serviceToEdit?:Service\r\n\r\n  @Output(\"on-submit\")\r\n  emitter = new EventEmitter\r\n\r\n  constructor(private newService : AppServiceService, public modalService:ModalService, private storageService:StorageService, private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.storageService.isLoggedIn()) {\r\n      this.router.navigate([\"user-login-form\"])\r\n    }\r\n    else {\r\n      this.getServiceList()\r\n    }\r\n  }\r\n\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  getServiceList() {\r\n    this.newService.getServiceList().subscribe((Response) => {\r\n      this.serviceList = Response\r\n      console.log('Response from API', Response)\r\n    }, (error) => {\r\n      console.error('error', Response)\r\n    })\r\n  }\r\n\r\n  editService(u:Service) {\r\n    this.serviceToEdit = u\r\n  }\r\n\r\n  commitEdit(u:Service) {\r\n    this.ngOnInit()\r\n\r\n    this.serviceToEdit = undefined\r\n  }\r\n\r\n  deleteService(u:Service) {\r\n    this.newService.deleteService(u).subscribe(\r\n      data => console.log('Success!', data),\r\n      error => console.error('error!', error)\r\n    )\r\n    \r\n    this.refresh()\r\n\r\n    this.emitter.emit()\r\n  }\r\n\r\n  onCancel() {\r\n    this.serviceToEdit = undefined\r\n  }\r\n\r\n  String(number : number) {\r\n    return String(number)\r\n  }\r\n}\r\n","<h1>Welcome to service gallery</h1>\r\n    <div *ngFor=\"let service of serviceList; index as i\">\r\n            <p>Number: {{ i+1 }}</p>\r\n            <p>Title {{ service.title }}</p>\r\n            <p>Description {{ service.description }}</p>\r\n            <p>Date Added {{ service.dateAdded }}</p>\r\n            <p>Last Modified {{ service.lastModified }}</p>\r\n            <p>Creator {{ service.user }}</p>\r\n            <button (click)=\"editService(service); modalService.open(String(i))\">Update</button>\r\n            <button (click)=\"deleteService(service)\">Delete</button>\r\n            <hr>\r\n            <jw-modal id='{{i}}'>\r\n                <app-update-service-form [service]=\"service\" (on-submit)=\"commitEdit($event); modalService.close(String(i))\"></app-update-service-form>\r\n                <button (click)=\"onCancel(); modalService.close(String(i))\">Cancel</button>\r\n            </jw-modal>\r\n    </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}