{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Service } from '../../models/service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../app-service.service\";\nimport * as i2 from \"@angular/forms\";\nexport class UpdateServiceFormComponent {\n  constructor(newService) {\n    this.newService = newService;\n    this.service = new Service();\n    this.emitter = new EventEmitter();\n  }\n  ngOnInit() {}\n  handleUpdate(nForm) {\n    var today = new Date();\n    var todayString = String(today.getFullYear()) + '-' + String(today.getMonth() + 1) + '-' + String(today.getDate());\n    const input = nForm.value;\n    const val = new Service({\n      _id: input.veh__id,\n      title: input.veh_title,\n      description: input.veh_description,\n      dateAdded: input.veh_dateAdded,\n      lastModified: todayString,\n      user: input.veh_user\n    });\n    this.newService.updateService(val).subscribe(data => console.log('Success', data), error => console.log('Error', error));\n    console.log(val);\n    this.emitter.emit();\n  }\n}\nUpdateServiceFormComponent.ɵfac = function UpdateServiceFormComponent_Factory(t) {\n  return new (t || UpdateServiceFormComponent)(i0.ɵɵdirectiveInject(i1.AppServiceService));\n};\nUpdateServiceFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateServiceFormComponent,\n  selectors: [[\"app-update-service-form\"]],\n  inputs: {\n    service: \"service\"\n  },\n  outputs: {\n    emitter: \"on-submit\"\n  },\n  decls: 19,\n  vars: 6,\n  consts: [[\"ngForm\", \"\"], [\"myForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"veh_title\", 3, \"ngModel\"], [\"type\", \"text\", \"name\", \"veh_description\", 3, \"ngModel\"], [\"type\", \"hidden\", \"name\", \"veh_dateAdded\", 3, \"ngModel\"], [\"type\", \"hidden\", \"name\", \"veh_lastModified\", 3, \"ngModel\"], [\"type\", \"hidden\", \"name\", \"veh_user\", 3, \"ngModel\"], [\"type\", \"hidden\", \"name\", \"veh__id\", 3, \"ngModel\"], [3, \"click\"]],\n  template: function UpdateServiceFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵtext(2, \" Title \");\n      i0.ɵɵelement(3, \"br\")(4, \"input\", 2)(5, \"br\");\n      i0.ɵɵtext(6, \" Description \");\n      i0.ɵɵelement(7, \"br\")(8, \"input\", 3)(9, \"br\")(10, \"input\", 4)(11, \"br\")(12, \"input\", 5)(13, \"br\")(14, \"input\", 6)(15, \"br\")(16, \"input\", 7);\n      i0.ɵɵelementStart(17, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function UpdateServiceFormComponent_Template_button_click_17_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.handleUpdate(_r0));\n      });\n      i0.ɵɵtext(18, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.title);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.description);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.dateAdded);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.lastModified);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.service.user);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.service._id);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoCA,YAAY,QAAe,eAAe;AAG9E,SAASC,OAAO,QAAQ,sBAAsB;;;;AAO9C,OAAM,MAAOC,0BAA0B;EAQrCC,YAAoBC,UAA4B;IAA5B,eAAU,GAAVA,UAAU;IAL9B,YAAO,GAAG,IAAIH,OAAO,EAAE;IAGvB,YAAO,GAAG,IAAID,YAAY;EAE0B;EAEpDK,QAAQ,IACR;EAEAC,YAAY,CAACC,KAAY;IACvB,IAAIC,KAAK,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAIC,WAAW,GAAGC,MAAM,CAACH,KAAK,CAACI,WAAW,EAAE,CAAC,GAAG,GAAG,GAAGD,MAAM,CAACH,KAAK,CAACK,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAG,GAAG,GAAGF,MAAM,CAACH,KAAK,CAACM,OAAO,EAAE,CAAC;IAEhH,MAAMC,KAAK,GAAGR,KAAK,CAACS,KAAK;IACzB,MAAMC,GAAG,GAAG,IAAIhB,OAAO,CAAC;MACtBiB,GAAG,EAAEH,KAAK,CAACI,OAAO;MAClBC,KAAK,EAAEL,KAAK,CAACM,SAAS;MACtBC,WAAW,EAAEP,KAAK,CAACQ,eAAe;MAClCC,SAAS,EAAET,KAAK,CAACU,aAAa;MAC9BC,YAAY,EAAEhB,WAAW;MACzBiB,IAAI,EAAEZ,KAAK,CAACa;KACb,CAAC;IAEF,IAAI,CAACxB,UAAU,CAACyB,aAAa,CAACZ,GAAG,CAAC,CAACa,SAAS,CAC1CC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC,EACpCG,KAAK,IAAIF,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,KAAK,CAAC,CACrC;IAEDF,OAAO,CAACC,GAAG,CAAChB,GAAG,CAAC;IAEhB,IAAI,CAACkB,OAAO,CAACC,IAAI,EAAE;EACrB;;;mBAnCWlC,0BAA0B;AAAA;;QAA1BA,0BAA0B;EAAAmC;EAAAC;IAAAC;EAAA;EAAAC;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;;MCVvCC,kCAA8B;MAC1BA,uBAAM;MAAAA,qBAAI;MAEVA,6BAAY;MAAAA,qBAAI;MAQhBA,kCAAuC;MAA/BA;QAAAA;QAAA;QAAA,OAASA,oCAAoB;MAAA,EAAC;MAACA,uBAAM;MAAAA,iBAAS;;;MATlBA,eAA2B;MAA3BA,2CAA2B;MAErBA,eAAiC;MAAjCA,iDAAiC;MAEjCA,eAA+B;MAA/BA,+CAA+B;MAC5BA,eAAkC;MAAlCA,kDAAkC;MAC1CA,eAA0B;MAA1BA,0CAA0B;MAC3BA,eAAwB;MAAxBA,yCAAwB","names":["EventEmitter","Service","UpdateServiceFormComponent","constructor","newService","ngOnInit","handleUpdate","nForm","today","Date","todayString","String","getFullYear","getMonth","getDate","input","value","val","_id","veh__id","title","veh_title","description","veh_description","dateAdded","veh_dateAdded","lastModified","user","veh_user","updateService","subscribe","data","console","log","error","emitter","emit","selectors","inputs","service","outputs","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\services\\update-service-form\\update-service-form.component.ts","C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\services\\update-service-form\\update-service-form.component.html"],"sourcesContent":["import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { AppServiceService } from '../../app-service.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Service } from '../../models/service';\r\n\r\n@Component({\r\n  selector: 'app-update-service-form',\r\n  templateUrl: './update-service-form.component.html',\r\n  styleUrls: ['./update-service-form.component.scss']\r\n})\r\nexport class UpdateServiceFormComponent implements OnInit {\r\n\r\n  @Input()\r\n  service = new Service()\r\n\r\n  @Output(\"on-submit\")\r\n  emitter = new EventEmitter\r\n\r\n  constructor(private newService:AppServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  handleUpdate(nForm:NgForm) {\r\n    var today = new Date()\r\n    var todayString = String(today.getFullYear()) + '-' + String(today.getMonth()+1) + '-' + String(today.getDate())\r\n\r\n    const input = nForm.value\r\n    const val = new Service({\r\n      _id: input.veh__id,\r\n      title: input.veh_title,\r\n      description: input.veh_description,\r\n      dateAdded: input.veh_dateAdded,\r\n      lastModified: todayString,\r\n      user: input.veh_user\r\n    })\r\n\r\n    this.newService.updateService(val).subscribe(\r\n      data => console.log('Success', data),\r\n      error => console.log('Error', error)\r\n    )\r\n    \r\n    console.log(val)\r\n\r\n    this.emitter.emit()\r\n  }\r\n\r\n}\r\n","<form ngForm #myForm=\"ngForm\">\r\n    Title <br>\r\n    <input type=\"text\" name=\"veh_title\" [ngModel] = \"service.title\"/><br>\r\n    Description <br>\r\n    <input type=\"text\" name=\"veh_description\" [ngModel] = \"service.description\" /><br>\r\n    \r\n    <input type=\"hidden\" name=\"veh_dateAdded\" [ngModel] = \"service.dateAdded\"/><br>\r\n    <input type=\"hidden\" name=\"veh_lastModified\" [ngModel] = \"service.lastModified\"/><br>\r\n    <input type=\"hidden\" name=\"veh_user\" [ngModel] = \"service.user\"/><br>\r\n    <input type=\"hidden\" name=\"veh__id\" [ngModel] =\"service._id\" />\r\n    \r\n    <button (click)=\"handleUpdate(myForm)\">Submit</button>\r\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}