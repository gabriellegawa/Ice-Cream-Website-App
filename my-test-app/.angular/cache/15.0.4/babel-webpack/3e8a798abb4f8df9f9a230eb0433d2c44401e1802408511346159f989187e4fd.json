{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { User } from '../models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../app-service.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/auth.service\";\nimport * as i4 from \"../_services/storage.service\";\nimport * as i5 from \"@angular/forms\";\nexport class UserLoginFormComponent {\n  constructor(service, router, authService, storageService) {\n    this.service = service;\n    this.router = router;\n    this.authService = authService;\n    this.storageService = storageService;\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.roles = [];\n    this.user = new User();\n    this.emitter = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this.storageService.isLoggedIn()) {\n      this.isLoggedIn = true;\n      this.roles = this.storageService.getUser().roles;\n      this.router.navigate([\"service-gallery\"]);\n    }\n  }\n  handleLogin(nForm) {\n    const input = nForm.value;\n    var loginUser = new User();\n    loginUser.emailAddress = input.veh_emailAddress;\n    loginUser.password = input.veh_password;\n    this.authService.login(loginUser).subscribe({\n      next: data => {\n        this.storageService.saveUser(data);\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.storageService.getUser().roles;\n        this.router.navigate([\"service-gallery\"]);\n      },\n      error: err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    });\n  }\n}\nUserLoginFormComponent.ɵfac = function UserLoginFormComponent_Factory(t) {\n  return new (t || UserLoginFormComponent)(i0.ɵɵdirectiveInject(i1.AppServiceService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.StorageService));\n};\nUserLoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserLoginFormComponent,\n  selectors: [[\"app-user-login-form\"]],\n  inputs: {\n    user: \"user\"\n  },\n  outputs: {\n    emitter: \"on-submit\"\n  },\n  decls: 12,\n  vars: 2,\n  consts: [[\"ngForm\", \"\"], [\"myForm\", \"ngForm\"], [\"type\", \"text\", \"name\", \"veh_emailAddress\", 3, \"ngModel\"], [\"type\", \"text\", \"name\", \"veh_password\", 3, \"ngModel\"], [3, \"click\"]],\n  template: function UserLoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵtext(2, \" Email Address \");\n      i0.ɵɵelement(3, \"br\")(4, \"input\", 2)(5, \"br\");\n      i0.ɵɵtext(6, \" Password \");\n      i0.ɵɵelement(7, \"br\")(8, \"input\", 3)(9, \"br\");\n      i0.ɵɵelementStart(10, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function UserLoginFormComponent_Template_button_click_10_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.handleLogin(_r0));\n      });\n      i0.ɵɵtext(11, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.emailAddress);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.password);\n    }\n  },\n  dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA2CA,YAAY,QAAQ,eAAe;AAG9E,SAASC,IAAI,QAAQ,gBAAgB;;;;;;;AAWrC,OAAM,MAAOC,sBAAsB;EAajCC,YAAoBC,OAA2B,EAAUC,MAAe,EAAUC,WAAwB,EAAUC,cAA8B;IAA9H,YAAO,GAAPH,OAAO;IAA8B,WAAM,GAANC,MAAM;IAAmB,gBAAW,GAAXC,WAAW;IAAuB,mBAAc,GAAdC,cAAc;IAXlI,eAAU,GAAW,KAAK;IAC1B,kBAAa,GAAW,KAAK;IAC7B,iBAAY,GAAU,EAAE;IACxB,UAAK,GAAa,EAAE;IAGpB,SAAI,GAAG,IAAIN,IAAI,EAAE;IAGjB,YAAO,GAAG,IAAID,YAAY;EAE4H;EAEtJQ,QAAQ;IACN,IAAI,IAAI,CAACD,cAAc,CAACE,UAAU,EAAE,EAAE;MACpC,IAAI,CAACA,UAAU,GAAG,IAAI;MACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,cAAc,CAACI,OAAO,EAAE,CAACD,KAAK;MAChD,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;;EAE7C;EAEAC,WAAW,CAACC,KAAY;IACtB,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAK;IACzB,IAAIC,SAAS,GAAG,IAAIhB,IAAI,EAAE;IAE1BgB,SAAS,CAACC,YAAY,GAAGH,KAAK,CAACI,gBAAgB;IAC/CF,SAAS,CAACG,QAAQ,GAAIL,KAAK,CAACM,YAAY;IAExC,IAAI,CAACf,WAAW,CAACgB,KAAK,CAACL,SAAS,CAAC,CAACM,SAAS,CAAC;MAC1CC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAAClB,cAAc,CAACmB,QAAQ,CAACD,IAAI,CAAC;QAElC,IAAI,CAACE,aAAa,GAAG,KAAK;QAC1B,IAAI,CAAClB,UAAU,GAAG,IAAI;QACtB,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,cAAc,CAACI,OAAO,EAAE,CAACD,KAAK;QAChD,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;MAC3C,CAAC;MACDgB,KAAK,EAAEC,GAAG,IAAG;QACX,IAAI,CAACC,YAAY,GAAGD,GAAG,CAACD,KAAK,CAACG,OAAO;QACrC,IAAI,CAACJ,aAAa,GAAG,IAAI;MAC3B;KACD,CAAC;EACJ;;;mBA5CWzB,sBAAsB;AAAA;;QAAtBA,sBAAsB;EAAA8B;EAAAC;IAAAC;EAAA;EAAAC;IAAAC;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCdnCC,kCAA8B;MAC1BA,+BAAc;MAAAA,qBAAI;MAElBA,0BAAS;MAAAA,qBAAI;MAGbA,kCAAsC;MAA9BA;QAAAA;QAAA;QAAA,OAASA,mCAAmB;MAAA,EAAC;MAACA,sBAAK;MAAAA,iBAAS;;;MAJTA,eAA+B;MAA/BA,+CAA+B;MAEnCA,eAA2B;MAA3BA,2CAA2B","names":["EventEmitter","User","UserLoginFormComponent","constructor","service","router","authService","storageService","ngOnInit","isLoggedIn","roles","getUser","navigate","handleLogin","nForm","input","value","loginUser","emailAddress","veh_emailAddress","password","veh_password","login","subscribe","next","data","saveUser","isLoginFailed","error","err","errorMessage","message","selectors","inputs","user","outputs","emitter","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\user-login-form\\user-login-form.component.ts","C:\\Users\\Gabriel Legawa\\OneDrive\\Documents\\Programming\\Projects\\Ice Cream Website App\\my-test-app\\src\\app\\user-login-form\\user-login-form.component.html"],"sourcesContent":["import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AppServiceService } from '../app-service.service';\r\nimport { User } from '../models/user';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../_services/auth.service';\r\nimport { StorageService } from '../_services/storage.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-login-form',\r\n  templateUrl: './user-login-form.component.html',\r\n  styleUrls: ['./user-login-form.component.scss']\r\n})\r\nexport class UserLoginFormComponent implements OnInit {\r\n\r\n  isLoggedIn:boolean = false\r\n  isLoginFailed:boolean = false\r\n  errorMessage:string = ''\r\n  roles: string[] = []\r\n\r\n  @Input()\r\n  user = new User()\r\n\r\n  @Output(\"on-submit\")\r\n  emitter = new EventEmitter\r\n\r\n  constructor(private service : AppServiceService, private router : Router, private authService: AuthService, private storageService: StorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.storageService.isLoggedIn()) {\r\n      this.isLoggedIn = true\r\n      this.roles = this.storageService.getUser().roles\r\n      this.router.navigate([\"service-gallery\"])\r\n    }\r\n  }\r\n\r\n  handleLogin(nForm:NgForm): void {\r\n    const input = nForm.value\r\n    var loginUser = new User()\r\n\r\n    loginUser.emailAddress = input.veh_emailAddress\r\n    loginUser.password =  input.veh_password\r\n\r\n    this.authService.login(loginUser).subscribe({\r\n      next: data => {\r\n        this.storageService.saveUser(data)\r\n\r\n        this.isLoginFailed = false\r\n        this.isLoggedIn = true\r\n        this.roles = this.storageService.getUser().roles\r\n        this.router.navigate([\"service-gallery\"])\r\n      },\r\n      error: err => {\r\n        this.errorMessage = err.error.message\r\n        this.isLoginFailed = true\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<form ngForm #myForm=\"ngForm\">\r\n    Email Address <br>\r\n    <input type=\"text\" name=\"veh_emailAddress\" [ngModel] = \"user.emailAddress\"/><br>\r\n    Password <br>\r\n    <input type=\"text\" name=\"veh_password\" [ngModel] = \"user.password\" /><br>\r\n    \r\n    <button (click)=\"handleLogin(myForm)\">Login</button>\r\n</form>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}